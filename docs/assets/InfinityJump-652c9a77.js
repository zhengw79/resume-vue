var y=Object.defineProperty;var p=(o,a,t)=>a in o?y(o,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[a]=t;var i=(o,a,t)=>(p(o,typeof a!="symbol"?a+"":a,t),t);import{P as r,B as m}from"./phaser-a4bd8bf9.js";import{o as u,a as g,c as f,b,h as v,d as x}from"./index-20a5fd13.js";class w extends r.GameObjects.Sprite{constructor(a,t,e,s){super(a,t,e,s),this.setScale(.5)}}class C extends r.Scene{constructor(){super("game");i(this,"play");i(this,"platforms");i(this,"cursors");i(this,"carrots");i(this,"carrotsCollected",0);i(this,"carrotsCollectedText")}init(){this.carrotsCollected=0}preload(){this.load.setBaseURL("./"),this.load.image("background","assets/imgs/jump/bg_layer1.png"),this.load.image("platform","assets/imgs/jump/ground_grass.png"),this.load.image("bunny-stand","assets/imgs/jump/bunny1_stand.png"),this.load.image("bunny-jump","assets/imgs/jump/bunny1_jump.png"),this.load.image("carrot","assets/imgs/jump/carrot.png"),this.cursors=this.input.keyboard.createCursorKeys()}create(){this.add.image(240,320,"background").setScrollFactor(1,0),this.platforms=this.physics.add.staticGroup();for(let e=0;e<5;e++){const s=r.Math.Between(80,400),l=150*e,c=this.platforms.create(s,l,"platform");c.scale=.5,c.body.updateFromGameObject()}this.player=this.physics.add.sprite(240,320,"bunny-stand").setScale(.5),this.physics.add.collider(this.platforms,this.player),this.player.body.checkCollision.up=!1,this.player.body.checkCollision.left=!1,this.player.body.checkCollision.right=!1,this.cameras.main.startFollow(this.player),this.cameras.main.setDeadzone(this.scale.width*1.5),this.carrots=this.physics.add.group({classType:w}),this.physics.add.collider(this.platforms,this.carrots),this.physics.add.overlap(this.player,this.carrots,this.handleCollectCarrot,void 0,this);const t={color:"#000",fontSize:24};this.carrotsCollectedText=this.add.text(240,10,"Carrots: 0",t).setScrollFactor(0).setOrigin(.5,0)}update(t,e){this.platforms.children.iterate(d=>{const n=d,h=this.cameras.main.scrollY;n.y>=h+700&&(n.y=h-r.Math.Between(50,100),n.body.updateFromGameObject(),this.addCarrotAbove(n))});const s=this.player.body.touching.down;s&&(this.player.setVelocityY(-300),this.player.setTexture("bunny-jump")),this.player.body.velocity.y>0&&this.player.texture.key!=="bunny-stand"&&this.player.setTexture("bunny-stand"),this.cursors.left.isDown&&!s?this.player.setVelocityX(-200):this.cursors.right.isDown&&!s?this.player.setVelocityX(200):this.player.setVelocityX(0),this.horizontalWrap(this.player);const c=this.findBottomMostPlatform();this.player.y>c.y+200&&this.scene.start("game-over")}horizontalWrap(t){const e=t.displayWidth*.5,s=this.scale.width;t.x<-e?t.x=s+e:t.x>s+e&&(t.x=-e)}addCarrotAbove(t){const e=t.y-t.displayHeight,s=this.carrots.get(t.x,e,"carrot");return s.setVisible(!0),s.setActive(!0),this.add.existing(s),s.body.setSize(s.width,s.height),this.physics.world.enable(s),s}handleCollectCarrot(t,e){this.carrots.killAndHide(e),this.physics.world.disableBody(e.body),this.carrotsCollected++;const s=`Carrots: ${this.carrotsCollected}`;this.carrotsCollectedText.text=s}findBottomMostPlatform(){const t=this.platforms.getChildren();let e=t[0];for(let s=1;s<t.length;s++){const l=t[s];l.y<e.y||(e=l)}return e}}class _ extends r.Scene{constructor(){super("game-over")}create(){const a=this.scale.width,t=this.scale.height;this.add.text(a*.5,t*.5,"Game Over",{fontSize:48}).setOrigin(.5),this.input.keyboard.once("keydown-SPACE",()=>{this.scene.start("game")})}}const k={class:"container-fluid"},S=v('<div class="row"><div id="game" class="col-12 col-sm-12 col-md-12 col-lg-7 col-xl-7"><canvas id="canvas" width="480" height="640" class="rounded shadow"></canvas></div><div class="col-12 col-sm-12 col-md-12 col-lg-5 col-xl-5 text-primary"><p>Features</p><ul><li>Web Game in desktop browser</li><li>Phaser Game Engine</li><li>Arcade Physics - 2D JS Physics Engine</li><li>Use arrow key (<i class="fa-solid fa-arrows-to-dot"></i>) to control &quot;bunny&quot;</li></ul></div></div>',1),P={__name:"InfinityJump",setup(o){let a;return u(()=>{const t={type:r.CANVAS,parent:"game",width:480,height:640,canvas:document.getElementById("canvas"),scene:[C,_],render:{antialias:!0,antialiasGL:!0},physics:{default:"arcade",arcade:{gravity:{y:200},debug:!1}}};a=new r.Game(t)}),g(()=>{a&&a.destroy(!0,!1)}),(t,e)=>(x(),f("div",k,[b(m),S]))}};export{P as default};
